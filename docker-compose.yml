version: "3.8"

services:
  web:
    env_file:
      - ./frontend/.env
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "1000:80"

  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "8080:8080"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
      - web
    volumes:
      - ./backend:/app
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 5000 & mitmdump -s mitm.py -p 8080 --set keep_host_header=true"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - .env
    depends_on:
      - app

  mongo:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: >
      sh -c "
      mongosh admin --eval 'db.createUser({ user: \"$$MONGO_INITDB_ROOT_USERNAME\", pwd: \"$$MONGO_INITDB_ROOT_PASSWORD\", roles: [ { role: \"root\", db: \"admin\" } ] })' &&
      mongosh admin -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --eval 'db.getSiblingDB(\"babirusa\").createCollection(\"init\"); db.getSiblingDB(\"babirusa-test\").createCollection(\"init\")'
      "

volumes:
  mongo_data:
